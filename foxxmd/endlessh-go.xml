<?xml version="1.0"?>
<Container version="2">
    <Name>endlessh-go</Name>
    <Repository>shizunge/endlessh-go</Repository>
    <Registry>https://hub.docker.com/r/shizunge/endlessh-go</Registry>
    <Network>bridge</Network>
    <MyIP/>
    <Shell>sh</Shell>
    <Privileged>false</Privileged>
    <Support>https://forums.unraid.net/topic/149905-support-foxxmd-endlessh-go/</Support>
    <Beta>False</Beta>
    <Project>https://github.com/shizunge/endlessh-go</Project>
    <Overview>(https://github.com/skeeto/endlessh) Endlessh is an SSH tarpit that very slowly sends an endless, random SSH banner. It keeps SSH clients locked up for hours or even days at a time. The purpose is to put your real SSH server on another port and then let the script kiddies get stuck in this tarpit instead of bothering a real server.&#xD;
        &#xD;
        endlessh-go (https://github.com/shizunge/endlessh-go) is a golang implementation of endlessh with additional features including exporting Prometheus metrics.</Overview>
    <Category>Security: Network:Other</Category>
    <WebUI/>
    <Date>2023-12-21</Date>
    <TemplateURL/>
    <Changes>
        [center][font size=5]endless-go Template Change Log[/font][/center]
        [font size=4]2023.12.21[/font]
        - Initial Release
    </Changes>
    <Icon>https://github.com/FoxxMD/unraid-docker-templates/raw/master/icons/openssh-server-logo.png</Icon>
    <ExtraParams/>
    <PostArgs>-enable_prometheus -geoip_supplier="ip-api" -logtostderr -v=1</PostArgs>
    <CPUset/>
    <DonateText/>
    <DonateLink/>
    <Requires>A Prometheus instance is required in order to collect exported metrics. See the support thread for setup.</Requires>
    <Networking>
        <Mode>bridge</Mode>
        <Publish>
            <Port>
                <HostPort>2222</HostPort>
                <ContainerPort>2222</ContainerPort>
                <Protocol>tcp</Protocol>
            </Port>
            <Port>
                <HostPort>2112</HostPort>
                <ContainerPort>2112</ContainerPort>
                <Protocol>tcp</Protocol>
            </Port>
        </Publish>
    </Networking>
    <Config Name="Listen Port" Target="2222" Default="" Mode="tcp" Description="" Type="Port" Display="always" Required="false" Mask="false">2222</Config>
    <Config Name="Prometheus Port" Target="2112" Default="" Mode="tcp" Description="" Type="Port" Display="always" Required="false" Mask="false">2112</Config>
</Container>